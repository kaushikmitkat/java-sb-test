name: Build Changed Maven Projects (With Caching)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Only Changed Maven Projects
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to compare commits properly

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Find Changed Maven Projects
        id: changes
        run: |
          git fetch origin main --depth=1

          # Get changed files since main
          CHANGED_FILES=$(git diff --name-only origin/main)

          # Detect modified Maven project directories (pom.xml or src/ changes)
          CHANGED_DIRS=$(echo "$CHANGED_FILES" | grep -E 'pom\.xml|src/' | xargs -n1 dirname | sort -u)

          if [ -z "$CHANGED_DIRS" ]; then
            echo "No relevant Maven project changes."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "$CHANGED_DIRS" > changed_dirs.txt
            echo "Changed project directories:"
            cat changed_dirs.txt
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Changed Projects
        if: steps.changes.outputs.changed == 'true'
        run: |
          while IFS= read -r dir; do
            if [ -f "$dir/pom.xml" ]; then
              echo "üî® Building project in $dir"
              mvn -B -f "$dir/pom.xml" clean install
            else
              echo "‚ö†Ô∏è No pom.xml in $dir, skipping"
            fi
          done < changed_dirs.txt
