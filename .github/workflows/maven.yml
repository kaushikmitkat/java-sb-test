name: Build Changed Maven Projects (Reliable Detection)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Only Changed Maven Projects
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git diff to work across commits

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Find Changed Maven Projects
        id: changes
        run: |
          git fetch origin main --depth=1

          # Get changed files
          git diff --name-only origin/main > changed_files.txt

          # Find all Maven projects (folders containing pom.xml)
          find . -name pom.xml | while read -r pom; do
            project_dir=$(dirname "$pom")

            # Check if any changed file is inside this project
            if grep -q "^${project_dir#/}/" changed_files.txt; then
              echo "$project_dir" >> changed_projects.txt
            fi
          done

          if [ -f changed_projects.txt ]; then
            sort -u changed_projects.txt > final_projects.txt
            cat final_projects.txt
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No relevant Maven project changes detected."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Changed Projects
        if: steps.changes.outputs.changed == 'true'
        run: |
          while IFS= read -r project_dir; do
            if [ -f "$project_dir/pom.xml" ]; then
              echo "üî® Building: $project_dir"
              mvn -B -f "$project_dir/pom.xml" clean install
            else
              echo "‚ö†Ô∏è Skipping $project_dir (no pom.xml)"
            fi
          done < final_projects.txt
