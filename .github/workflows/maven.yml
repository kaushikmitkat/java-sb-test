name: Build Changed Maven Projects (Robust)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Only Changed Maven Projects
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git diff

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Determine changed Maven projects
        id: changes
        run: |
          git fetch origin main

          # Get all changed files
          git diff --name-only origin/main > changed_files.txt

          # Clean path list to avoid issues with ./ and spaces
          CHANGED_PROJECTS=()

          # Loop over all pom.xml files
          while IFS= read -r pom; do
            project_dir=$(realpath --relative-to=. "$(dirname "$pom")")
          
            while IFS= read -r changed_file; do
              # If the changed file is inside this project directory
              if [[ "$changed_file" == "$project_dir/"* ]]; then
                CHANGED_PROJECTS+=("$project_dir")
                break
              fi
            done < changed_files.txt
          done < <(find . -name pom.xml)

          # Remove duplicates and output
          if [ ${#CHANGED_PROJECTS[@]} -eq 0 ]; then
            echo "No relevant project changes found."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            printf "%s\n" "${CHANGED_PROJECTS[@]}" | sort -u > final_projects.txt
            cat final_projects.txt
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Changed Projects
        if: steps.changes.outputs.changed == 'true'
        run: |
          while IFS= read -r dir; do
            echo "ðŸ”¨ Building project: $dir"
            mvn -B -f "$dir/pom.xml" clean install
          done < final_projects.txt
